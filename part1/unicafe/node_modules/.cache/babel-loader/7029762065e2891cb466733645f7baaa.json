{"ast":null,"code":"var _jsxFileName = \"/Users/tomcheah/fullstack/fullstackopen/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 30\n  }, this);\n};\n\n_c = Header;\n\nconst Button = _ref2 => {\n  let {\n    handleClick,\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Button;\n\nconst Statistics = props => {\n  if (props.total > 0) {\n    let average = (props.good - props.bad) / props.total;\n    let positive = props.good / props.total;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"good\",\n        value: props.good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"neutral\",\n        value: props.neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"bad\",\n        value: props.bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"all\",\n        value: props.total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"average\",\n        value: props.total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"positive\",\n        value: props.total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatPercentage, {\n        text: \"average\",\n        total: props.total,\n        good: props.good,\n        neutral: props.neutral,\n        bad: props.bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatPercentage, {\n        text: \"positive\",\n        total: props.total,\n        good: props.good,\n        neutral: props.neutral,\n        bad: props.bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" No feedback given \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst StatisticLine = _ref3 => {\n  let {\n    text,\n    value\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [text, \" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\n_c4 = StatisticLine;\n\nconst StatPercentage = _ref4 => {\n  let {\n    text,\n    good,\n    neutral,\n    bad,\n    total\n  } = _ref4;\n\n  if (text === \"average\") {\n    console.log(total);\n    let average = (good + bad) / total;\n    console.log(average);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", text, \" \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", text, \" \", good / total * 100, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_c5 = StatPercentage;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  let total = good + neutral + bad;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      total: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c6 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"StatisticLine\");\n$RefreshReg$(_c5, \"StatPercentage\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["useState","Header","text","Button","handleClick","Statistics","props","total","average","good","bad","positive","neutral","StatisticLine","value","StatPercentage","console","log","App","setGood","setNeutral","setBad"],"sources":["/Users/tomcheah/fullstack/fullstackopen/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Header = ({ text }) => <h1>{text}</h1>\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst Statistics = (props) => {\n  if (props.total > 0) {\n    let average = (props.good - props.bad) / props.total\n    let positive = props.good / props.total\n    return (\n      <div>\n        <StatisticLine text=\"good\" value={props.good} />\n        <StatisticLine text=\"neutral\" value={props.neutral} />\n        <StatisticLine text=\"bad\" value={props.bad} />\n        <StatisticLine text=\"all\" value={props.total} />\n        <StatisticLine text=\"average\" value={props.total} />\n        <StatisticLine text=\"positive\" value={props.total} />\n\n        <StatPercentage text=\"average\" total={props.total} good={props.good} neutral={props.neutral} bad={props.bad} />\n        <StatPercentage text=\"positive\" total={props.total} good={props.good} neutral={props.neutral} bad={props.bad} />\n      </div>\n    )\n  }\n  return <div> No feedback given </div>\n}\n\n\nconst StatisticLine = ({ text, value }) => (\n  <div>\n    {text} {value}\n  </div>\n)\n\nconst StatPercentage = ({ text, good, neutral, bad, total}) => {\n  if (text === \"average\") {\n    console.log(total)\n    let average = (good+bad)/total\n    console.log(average)\n    return <div> {text} {average}</div>\n  } else {\n    return <div> {text} {(good)/total * 100} %</div>\n  }\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  let total = good + neutral + bad\n\n  return (\n    <div>\n      <Header text=\"give feedback\" />\n      <Button handleClick={() => setGood(good+1)} text=\"good\"/>\n      <Button handleClick={() => setNeutral(neutral+1)} text=\"neutral\"/>\n      <Button handleClick={() => setBad(bad+1)} text=\"bad\"/>\n      <Header text=\"statistics\" />\n      <Statistics good={good} neutral={neutral} bad={bad} total={total} />\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}